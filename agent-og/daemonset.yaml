apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: kube-system
type: Opaque
data:
  MINIO_ACCESS_KEY: <base64-encoded-access-key>
  MINIO_SECRET_KEY: <base64-encoded-secret-key>
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: checkpoint-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: checkpoint-agent
  template:
    metadata:
      labels:
        app: checkpoint-agent
    spec:
      # Only run on worker nodes
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      # Allow access to host checkpoint path
      volumes:
        - name: kubelet-checkpoints
          hostPath:
            path: /var/lib/kubelet/checkpoints
            type: DirectoryOrCreate
      containers:
        - name: checkpoint-agent
          image: vitu1/checkpoint-agent:latest
          imagePullPolicy: Always
          env:
            - name: CHECKPOINT_DIR
              value: /var/lib/kubelet/checkpoints
            - name: MINIO_ENDPOINT
              value: minio:9000
            - name: MINIO_BUCKET
              value: checkpoints
            - name: PULL_INTERVAL
              value: 5m
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: MINIO_ACCESS_KEY
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: MINIO_SECRET_KEY
          volumeMounts:
            - name: kubelet-checkpoints
              mountPath: /var/lib/kubelet/checkpoints
              readOnly: true
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
